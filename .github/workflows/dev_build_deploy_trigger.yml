name: Dev. Build, deploy docker image, trigger

on:
  push:
    branches:
      - 'dev'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        required: false
        description: 'Test scenario tags'

jobs:
  build_docker_image:
    name: Build and create docker image. Send to docker registry
    runs-on: ubuntu-latest
    steps:

      #     Build JAR:
      - uses: actions/checkout@v3
        with:
          ref: dev
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Maven Package
        run: mvn -B clean compile package

      #     Set global environment variables:
      - name: set global env
        id: global_env
        #       переменную IMAGE_NAME формируем из названия репозитория
        #                       "owner/repo-name"
        #       берем все что после   /  чтобы задать имя образа
        #       set-output выставляет переменную в этом шаге
        run: |
          echo "::set-output name=IMAGE_NAME::dev"
          echo "::set-output name=DOCKERHUB_IMAGE_NAME::ghcr.io/${GITHUB_REPOSITORY}/dev"
      #     Build Docker image:
      - name: Build and tag image
        run: |
          docker build -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest" -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:${GITHUB_SHA::8}" .
      - name: Docker login
        run: docker login ghcr.io -u $GITHUB_ACTOR -p ${{secrets.GITHUB_TOKEN}}

      #     Publish image to github package repository:
      - name: Publish image
        env:
          IMAGE_NAME: $GITHUB_REPOSITORY
        run: docker push "ghcr.io/$GITHUB_REPOSITORY/${{ steps.global_env.outputs.IMAGE_NAME }}"
  trigger_to_deploy_docker_img:
    name: Dispatch to `init-repo`
    runs-on: ubuntu-latest
    needs: build_docker_image
    steps:
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repository: l423r/init-repo
          event-type: eu-gptchat-1-deploy
          client-payload: '{"message": "${{ github.event.commits[0].message }}", "sha": "${{ github.sha }}"}'
  finish:
    needs: trigger_to_deploy_docker_img
    name: Send notification for finish
    runs-on: ubuntu-latest
    steps:
      - name: send telegram message on finish workflows
        uses: appleboy/telegram-action@master
        with:
          to: ${{ vars.TELEGRAM_TO }}
          token: ${{ vars.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created commit:
            Commit message: ${{ github.event.commits[0].message }}

            Repository: ${{ github.repository }}
            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}

            CI completed,  message sent to start CD