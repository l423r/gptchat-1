name: Prod. Build, deploy docker image, trigger

on:
  push:
    branches:
      - 'master'
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'
        required: true
        default: 'warning'
      tags:
        required: false
        description: 'Test scenario tags'

jobs:
  build_docker_image:
    name: Build and create docker image. Send to docker registry
    runs-on: ubuntu-latest
    steps:

      #     Build JAR:
      - uses: actions/checkout@v3
        with:
          ref: master
      - name: set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.17
      - name: Maven Package
        run: mvn -B clean compile package

      #     Set global environment variables:
      - name: set global env
        id: global_env
        #       переменную IMAGE_NAME формируем из названия репозитория
        #                       "owner/repo-name"
        #       берем все что после   /  чтобы задать имя образа
        #       set-output выставляет переменную в этом шаге
        run: |
          echo "::set-output name=IMAGE_NAME::prod"
          echo "::set-output name=DOCKERHUB_IMAGE_NAME::docker.pkg.github.com/${GITHUB_REPOSITORY}/prod"
      #     Build Docker image:
      - name: Build and tag image
        run: |
          docker build -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:latest" -t "${{ steps.global_env.outputs.DOCKERHUB_IMAGE_NAME }}:${GITHUB_SHA::8}" .
      - name: Docker login
        run: docker login docker.pkg.github.com -u $GITHUB_ACTOR -p ${{secrets.GITHUB_TOKEN}}

      #     Publish image to github package repository:
      - name: Publish image
        env:
          IMAGE_NAME: $GITHUB_REPOSITORY
        run: docker push "docker.pkg.github.com/$GITHUB_REPOSITORY/${{ steps.global_env.outputs.IMAGE_NAME }}"
  trigger_to_deploy_docker_img:
    name: Dispatch to `init-repo`
    runs-on: ubuntu-latest
    needs: build_docker_image
    steps:
      - name: Emit repository_dispatch
        uses: mvasigh/dispatch-action@main
        with:
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
          repo: init-repo
          owner: l423r
          event_type: prod-gptchat-1-deploy